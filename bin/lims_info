#!/usr/bin/env ruby
# -*- mode: ruby -*-

$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))

require 'lims_info'
require 'optparse'

module LimsInfo
  module Executable
    HELP = <<-HELP
    lims_info: providing the information you need from LIMs
    Usage: lims_info [COMMAND] <PARAMETERS>

    lims_info Commands:
      version    - Print version number and exits
      help       - Print this help and exits

      paths (p) - Given an order_id, prints relevant flowcell
                   information. order_id should be in the form:
                   MOLNG-123 or just the number 123


      order (o) - Given an order_id, prints information about
                   data associated with that order in yaml. Only 
                   distributed data is output. order_id should
                   be in the form MOLNG-123 or just 123

      user (u)  - Given a users login (their initials), prints
                   all orders requested by this user

    HELP
    def self.execute(command, args)
      case command
      when 'version', '-v'
        require 'lims_info/version'
        puts LimsInfo::VERSION
      when "paths", "p"
        LimsInfo::Paths.start args
      when "order", "o"
        LimsInfo::Order.start args
      when "user", "u"
        LimsInfo::User.start args
      when "flowcell", "f"
        LimsInfo::Flowcell.start args
      when "encrypt"
        LimsInfo::Encrypt.obfuscate(args.shift)
      else
        puts LimsInfo::Executable::HELP
      end
    end
  end
end

command = ARGV.shift
options = {}

opts = OptionParser.new do |o|
  o.on('-h', '--help', 'Displays help screen, then exits') {puts o; exit}
end
opts.parse!
LimsInfo::Executable.execute(command, ARGV)
